import random
import logging
from aiogram import Router, types
from aiogram.types import URLInputFile
from aiogram.filters import CommandStart, Command
import db.db as db
import keyboards.keyboards as kb

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

router = Router()

STICKER_ID = 'CAACAgIAAxkBAAEH3Ppj9xWKbtQ-kWtb6uKkwvE8EbGCMQAC9ScAAp-e8Enjve-XHgojSS4E'

@router.message(CommandStart())
async def process_start_command(message: types.Message):
    try:
        await message.reply(
            """
–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –±–æ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Ç—Ä–∞–º–≤–∞–µ–≤ –≤ –≥.–ò–∂–µ–≤—Å–∫ üöÉ
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- /new - –í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
- /favorites - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
- /add_favorite - –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
- /delete_favorite - –£–¥–∞–ª–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
- /description - –û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
- /developer - –£–∑–Ω–∞—Ç—å –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ
–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏ /new –∏ –≤—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –º–∞—Ä—à—Ä—É—Ç! üöâ
            """        
        )
    except Exception as e:
        logger.error(f"Error in start command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.")

@router.message(Command('developer'))
async def process_developer_command(message: types.Message):
    try:
        await message.answer("–¢–∞–º —è", reply_markup=kb.WebAppMe)
    except Exception as e:
        logger.error(f"Error in developer command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ.")

@router.message(Command('help'))
async def process_help_command(message: types.Message):
    try:
        msg = "–¢—É—Ç –∏ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–∞–∫ —Ç—ã –Ω–µ —Å–º–æ–≥(–ª–∞) —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è?"
        await message.reply(msg)
        await message.answer_sticker(STICKER_ID)
    except Exception as e:
        logger.error(f"Error in help command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏.")

@router.message(Command('description'))
async def process_description_command(message: types.Message):
    try:
        msg = '''–£–≤–∞–∂–∞–µ–º—ã–µ –ø–∞—Å—Å–∞–∂–∏—Ä—ã, –¥–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞—Ö —Ç—Ä–∞–º–≤–∞–µ–≤. –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Ç—Ä–∞–º–≤–∞—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–æ–ø—É—Å–∫ –Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è +2 –º–∏–Ω. (–æ–ø–æ–∑–¥–∞–Ω–∏–µ), -1 –º–∏–Ω. (–Ω–∞–≥–æ–Ω).
–û–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –±—É–¥–Ω–∏—Ö –¥–Ω–µ–π, —Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è.
–î–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è —Ç—Ä–∞–º–≤–∞–µ–≤, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∑–∞–¥–µ—Ä–∂–µ–∫ –≤ –ª–∏–Ω–∏–∏.'''
        await message.reply(msg)
    except Exception as e:
        logger.error(f"Error in description command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è.")

@router.message(Command('statistics'))
async def cmd_statistics(message: types.Message):
    try:
        if message.from_user.id != 842331262:
            return
        
        day_usage_count = db.get_day_usage_count()
        favorite_route_count = db.get_favorite_route_count()
        user_count = db.get_user_count()
        
        await message.reply(
            f"""
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤: {favorite_route_count}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å: {day_usage_count}
            """
        )
    except Exception as e:
        logger.error(f"Error in statistics command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

@router.message(Command('dice'))
async def cmd_dice(message: types.Message):
    try:
        dice = ['üé≤', 'üéØ', 'üèÄ', '‚öΩ', 'üé∞', 'üé≥']
        await message.answer_dice(emoji=random.choice(dice))
    except Exception as e:
        logger.error(f"Error in dice command: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ—Å–∞–Ω–∏–∏ –∫—É–±–∏–∫–∞.")